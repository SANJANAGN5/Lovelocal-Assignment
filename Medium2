Medium 2 
Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times.

CODE:

def majority_elements(nums):
  if not nums:
      return []

  count1, count2, candidate1, candidate2 = 0, 0, None, None

  for num in nums:
      if candidate1 is not None and num == candidate1:
         count1 += 1
      elif candidate2 is not None and num == candidate2:
         count2 += 1
      elif count1 == 0:
         candidate1, count1 = num, 1
      elif count2 == 0:
         candidate2, count2 = num, 1
      else:
         count1 -= 1
         count2 -= 1

  count1, count2 = 0, 0
  for num in nums:
      if num == candidate1:
         count1 += 1
      elif num == candidate2:
         count2 += 1

  result = []
  if count1 > len(nums) // 3:
      result.append(candidate1)
  if count2 > len(nums) // 3:
      result.append(candidate2)

  return result

if __name__ == "__main__":
  nums = [3,2,3]
  result = majority_elements(nums)
  print(result)

OUTPUT:

For Example 1:
Input: nums = [3,2,3]
Output: [3]

For Example 2:
Input: nums = [1]
Output: [1]
