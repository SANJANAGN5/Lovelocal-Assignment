Easy  2

Given an integer array nums where the elements are sorted in ascending order, convert it to a 
height-balanced binary search tree.

CODE:

class TreeNode:
   def __init__(self, val = 0, left=None, right=None):
       self.val = val
       self.left = left
       self.right = right

def sortedArrayToBST(nums):
    if not nums:
        return None

    mid = len(nums) // 2
    root = TreeNode(nums[mid])
    root.left = sortedArrayToBST(nums[:mid])
    root.right = sortedArrayToBST(nums[mid + 1:])

    return root

def printTree(root):
    if root:
        print(root.val, end=' ')
        printTree(root.left)
        printTree(root.right)

nums = input()
result_tree = sortedArrayToBST(nums)
printTree(result_tree)


OUTPUT:

For Example1:
Input: nums = [-10,-3,0,5,9]
Output: [0,-3,9,-10,null,5]

For Example2:
Input: nums = [1,3]
Output: [3,1]
